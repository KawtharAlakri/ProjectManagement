@model ProjectManagement.Models.Comment

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1 class="mt-4">Edit</h1>

<h4>Comment</h4>
<hr />
@if (TempData.ContainsKey("ErrorMessage") && !String.IsNullOrEmpty(TempData["ErrorMessage"].ToString()))
{
    <div class="alert alert-dismissible alert-danger mt-3">
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        <strong>@TempData["ErrorMessage"] </strong>
    </div>
}
@if (TempData.ContainsKey("SuccessMessage") && !String.IsNullOrEmpty(TempData["SuccessMessage"].ToString()))
{
    <div class="alert alert-dismissible alert-success mt-3">
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        <strong>@TempData["SuccessMessage"]</strong>
    </div>
}
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="CommentId" />
            <div class="form-group">
                <label asp-for="CommentText" class="control-label"></label>
                <input asp-for="CommentText" class="form-control" />
                <span asp-validation-for="CommentText" class="text-danger"></span>
            </div>
                <input type="hidden" asp-for="TaskId" class="form-control"></input>
                <input type="hidden" asp-for="AuthorId" class="form-control"></input>
            <input type="hidden" asp-for="PostedAt" class="form-control"></input>
            <div class="form-group mt-4">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>


@*show validation messages*@
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}