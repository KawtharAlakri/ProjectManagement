@model IEnumerable<ProjectManagement.Models.Project>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>My Projects</h1>
@if (TempData.ContainsKey("ErrorMessage") && !String.IsNullOrEmpty(TempData["ErrorMessage"].ToString()))
{
    <div class="alert alert-dismissible alert-danger">
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        <strong>@TempData["ErrorMessage"] </strong>
    </div>
}
@if (TempData.ContainsKey("SuccessMessage") && !String.IsNullOrEmpty(TempData["SuccessMessage"].ToString()))
{
    <div class="alert alert-dismissible alert-success">
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        <strong>@TempData["SuccessMessage"]</strong>
    </div>
}
<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-action="Index" asp-controller="Projects" method="get">
    <input type="text" name="searchString" placeholder="Search by project name.." value="@ViewBag.searchString" />
    <label>Projects where I am:</label>
    <input type="radio" name="filterBy" value="member" @(ViewBag.filterBy == "member" ? "checked" : "") />
    <label for="filterMember">Member</label>
    <input type="radio" name="filterBy" value="manager" @(ViewBag.filterBy == "manager" ? "checked" : "") />
    <label for="filterManager">Manager</label>
    <label> Status </label>
    <select name="statusFilter" asp-items="ViewBag.Status"></select>
    <input type="submit" value="Filter"/>
    <a asp-action="Index" asp-controller="Projects">Clear</a>
</form>
@foreach (var item in Model){
    
    <div class="card" style="max-width: 20rem;">
        <a asp-action="View" asp-route-id="@item.ProjectId">
    <div class="card-body">
        <h4 class="card-title">@item.ProjectName</h4>
        <h6 class="card-subtitle mb-2 text-muted">@item.ProjectManager</h6> <span class="badge rounded-pill bg-secondary">@item.Status</span>
        <p class="card-text">@item.Description</p>
            @if (item.ProjectManager == User.Identity.Name)
            {
                <a asp-action="Edit" asp-route-id="@item.ProjectId" class="card-link">Edit</a> 
                <a asp-action="Delete" asp-route-id="@item.ProjectId" class="card-link"> Delete </a>
                <a asp-controller="Tasks" asp-action="Index" asp-route-id="@item.ProjectId">Tasks</a>
            }
    </div>
        </a>
</div>
   
}
@*
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProjectName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedAt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DueDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Budget)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProjectManagerNavigation)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StatusNavigation)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ProjectName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedAt)
                </td>
                <td>
                    @if (item.DueDate == null)
                    {
                        @Html.Raw("-")
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.DueDate)
                    }
                </td>
                <td>
                    @if (item.Budget == null)
                    {
                        @Html.Raw("-")
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.Budget)
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProjectManager)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StatusNavigation.StatusName)
                </td>
                <td>
                    @if (item.ProjectManager == User.Identity.Name)
                    {
                        <a asp-action="Details" asp-route-id="@item.ProjectId"> Details </a>  <text>|</text>
                        <a asp-action="Edit" asp-route-id="@item.ProjectId">Edit</a> <text>|</text>
                        <a asp-action="Delete" asp-route-id="@item.ProjectId"> Delete </a> 
                    }
                    else
                    {
                        <a asp-action="Details" asp-route-id="@item.ProjectId">Details</a>
                    }
                    <text>|</text> <a asp-controller="Tasks" asp-action="Index" asp-route-id="@item.ProjectId">Tasks</a>
                </td>

            </tr>
        }
    </tbody>
</table>*@
