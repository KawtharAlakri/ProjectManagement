@model IEnumerable<ProjectManagement.Models.Project>

@{
    ViewData["Title"] = "Projects";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h1 class="mt-4">My Projects</h1>

<div class="row">
    <div class="col-md-6">
        <div class="card border-0 mb-4">
            <div class="card-body d-flex align-items-center border-bottom">
                <form asp-action="Index" asp-controller="Projects" method="get" class="d-flex">

                    <div class="input-group me-3">
                        <input type="text" name="searchString" class="form-control" placeholder="Search by project name.." value="@ViewBag.searchString" />
                        <button class="btn btn-outline-secondary" type="submit">Search</button>
                    </div>
                    <div class="dropdown">
                        <button class="btn btn-light dropdown-toggle" type="button" id="filterDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="bi bi-funnel"></i> Filter
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="filterDropdown">
                            <li>
                                <h6 class="dropdown-header text-info">Projects Where I am </h6>
                                <ul class="list-unstyled">
                                    <li><a class="dropdown-item" asp-action="Index" asp-controller="Projects" asp-route-filterBy="member">Member</a></li>
                                    <li><a class="dropdown-item" asp-action="Index" asp-controller="Projects" asp-route-filterBy="manager">Manager</a></li>
                                </ul>
                            </li>
                            <li>
                                <h6 class="dropdown-header text-info">Projects With Status</h6>
                                <ul class="list-unstyled">
                                    <li><a class="dropdown-item" asp-action="Index" asp-controller="Projects" asp-route-statusFilter="completed">Completed</a></li>
                                    <li><a class="dropdown-item" asp-action="Index" asp-controller="Projects" asp-route-statusFilter="overdue">Overdue</a></li>
                                    <li><a class="dropdown-item" asp-action="Index" asp-controller="Projects" asp-route-statusFilter="in progress">In Progress</a></li>
                                </ul>
                            </li>
                        </ul>
                    </div>
                    <div class="ms-3">
                        <a asp-action="Index" asp-controller="Projects" class="btn btn-light">Reset</a>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div class="col-md-6 text-end">
        <a asp-action="Create" class="btn btn-primary">
            <i class="bi bi-plus"></i> Create Project
        </a>
    </div>
</div>

@if (TempData.ContainsKey("ErrorMessage") && !String.IsNullOrEmpty(TempData["ErrorMessage"].ToString()))
{
    <div class="alert alert-dismissible alert-danger">
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        <strong>@TempData["ErrorMessage"] </strong>
    </div>
}
@if (TempData.ContainsKey("SuccessMessage") && !String.IsNullOrEmpty(TempData["SuccessMessage"].ToString()))
{
    <div class="alert alert-dismissible alert-success">
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        <strong>@TempData["SuccessMessage"]</strong>
    </div>
}

<div class="row">
    @foreach (var item in Model)
    {
        <div class="col-md-4 mb-3">
            <div class="card bg-light" style="max-width: 20rem;">
                <a asp-action="View" asp-route-id="@item.ProjectId" class="card-link" style="text-decoration: none; color: inherit;">
                <div class="card-body">
                      <h4 class="card-title">@item.ProjectName</h4>
@*                        <h6 class="card-subtitle mb-2 text-muted">@item.ProjectManager</h6> 
*@                    <span class="badge @GetBadgeClass(item.Status)">@item.Status</span>
                    <p class="card-text">@item.Description</p>
                </div>
                </a>
            </div>
        </div>
    }
</div>





@functions {
    public string GetBadgeClass(string status)
    {
        switch (status.ToLower())
        {
            case "completed":
                return "badge bg-success";
            case "overdue":
                return "badge bg-danger";
            case "in progress":
                return "badge bg-warning";
            default:
                return "badge";
        }
    }
}


