@model ProjectManagement.ViewModels.DocumentDetailsVM
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["ActiveTab"] = "Documents"; // Set the active tab based on the current page
}

@Html.Partial("_taskTabs", Model.task)

@if (TempData.ContainsKey("ErrorMessage") && !String.IsNullOrEmpty(TempData["ErrorMessage"].ToString()))
{
    <div class="alert alert-dismissible alert-danger mt-3">
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        <strong>@TempData["ErrorMessage"] </strong>
    </div>
}
@if (TempData.ContainsKey("SuccessMessage") && !String.IsNullOrEmpty(TempData["SuccessMessage"].ToString()))
{
    <div class="alert alert-dismissible alert-success mt-3">
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        <strong>@TempData["SuccessMessage"]</strong>
    </div>
}

<div class="d-flex justify-content-end mt-3">
    <a asp-action="Create" asp-route-id="@Model.task.TaskId" class="btn btn-primary">
        <i class="bi bi-plus"></i> Add Documents
    </a>
</div>

<table class="table mt-3">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.document.DocumentName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.document.DocumentType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.document.UploadedAt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.document.UploadedBy)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.documents)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.DocumentName)
                </td>
                
                <td>
                    @Html.DisplayFor(modelItem => item.DocumentType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UploadedAt)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UploadedBy)
                </td>
                <td>
                    @if (item.DocumentType == "Photo")
                    {
                        <a href="@Url.Action("GetImage", "Documents", new { fileName = item.FilePath })" data-lightbox="image-gallery">View Image</a>
                    }
                    else
                    {
                        @if (!string.IsNullOrEmpty(item.FilePath))
                        {
                            string fileUrl = Url.Action("GetFile", "Documents", new { fileName = item.FilePath });
                            <a href="@fileUrl" target="_blank">Download File</a>
                        }
                    }
                </td>
                <td style="text-align: right;">
                    <a class="px-4" style="text-decoration: none; color: inherit; margin-right: 2px;" href="#" onclick="confirmDelete('@item.DocumentId', '@item.DocumentName')"><i class="bi bi-trash-fill"></i></a>
                </td>

            </tr>
        }
    </tbody>
</table>

<!-- Modal -->
<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" role="dialog" aria-labelledby="deleteConfirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteConfirmationModalLabel">Delete Confirmation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete document <span id="documentNameSpan"></span>?</p>
            </div>
            <div class="modal-footer">
                <form id="deleteForm" asp-action="Delete" asp-controller="Documents" method="post">
                    <input type="hidden" name="documentId" id="documentIdInput" />
                    <input type="submit" value="Delete" class="btn btn-danger" />
                    <a class="btn btn-secondary" data-bs-dismiss="modal">Cancel</a>
                </form>
            </div>
        </div>
    </div>
</div>

@*delete modal *@
<script>
    function confirmDelete(documentId, documentName) {
        // Set the document ID and name in the modal
        document.getElementById("documentIdInput").value = documentId;
        document.getElementById("documentNameSpan").textContent = documentName;

        // Update the form action URL
        var form = document.getElementById("deleteForm");
        var actionUrl = form.getAttribute("action");
        actionUrl += "/" + documentId;
        form.setAttribute("action", actionUrl);

        // Show the modal
        var modal = new bootstrap.Modal(document.getElementById("deleteConfirmationModal"));
        modal.show();
    }
</script>

