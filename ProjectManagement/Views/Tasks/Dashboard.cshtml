@model ProjectManagement.ViewModels.DahsboardVM

@{
    ViewData["Title"] = "Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="row">
        <div class="col-md-6">
            <h1 class="mt-4">My Dashboard</h1>
        </div>
    </div>
    <div class="row mt-4">
        <div class="col-md-6">
            <div class="upcoming-tasks pb-2">
            <h4 class="mt-4">Upcoming Tasks</h4>
                <ul class="list-group">
                   
                        @foreach (var task in Model.Tasks)
                        {
                            // Calculate days left if the due date is not null
                            int? daysLeft = null;
                            if (task.DueDate.HasValue)
                            {
                                TimeSpan timeLeft = task.DueDate.Value - DateTime.Today;
                                daysLeft = (int)timeLeft.TotalDays;
                            }
                            <li onclick="location.href='@Url.Action("Details", new { id = task.TaskId })';" style="cursor:pointer;" class="list-group-item d-flex justify-content-between align-items-center">
                                @task.TaskName
                                <span class="badge bg-danger rounded-pill">@daysLeft days left</span>
                            </li>
                        }
                    
                </ul>
            </div>
            <div class="upcoming-tasks mt-4">
                <h4>Upcoming Projects</h4>
                <ul class="list-group">
                   
                    @foreach (var project in Model.projects)
                    {
                        // Calculate days left if the due date is not null
                        int? daysLeft = null;
                        if (project.DueDate.HasValue)
                        {
                            TimeSpan timeLeft = project.DueDate.Value - DateTime.Today;
                            daysLeft = (int)timeLeft.TotalDays;
                        }

                        <li onclick="location.href='@Url.Action("Details", "Projects", new { id = project.ProjectId })';" style="cursor:pointer;" class="list-group-item d-flex justify-content-between align-items-center">
                            @project.ProjectName
                            <span class="badge bg-danger rounded-pill">@daysLeft days left</span>
                        </li>
                    }
                    
                </ul>
            </div>
        </div>
        <div class="col-md-6">
            <h4 class="mt-4">Tasks Insights</h4>
            <div class="chart-container">
                <canvas id="myChart"></canvas>
            </div>
        </div>
    </div>
</div>

<style>
    .chart-container {
        height: 80%;
        border: 1px solid #dee2e6;
        padding: 10px;
        border-radius: 0.375rem; /* Add rounded corners */
    }

    .upcoming-tasks {
        max-width: 400px; /* Adjust the width as needed */
        margin-right: 0;
        margin-left: 0;
    }
</style>

<script>
    // Get the data from ViewBag
    var completed = @ViewBag.completed;
    var inProgress = @ViewBag.inProgress;
    var overdue = @ViewBag.overdue;

    // Create the chart
    var ctx = document.getElementById('myChart').getContext('2d');
    var myChart = new Chart(ctx, {
        type: 'pie', // Set the chart type to 'pie'
        data: {
            labels: ['Completed', 'In Progress', 'Overdue'], // Set the labels for the chart
            datasets: [{
                data: [completed, inProgress, overdue], // Set the data values
                backgroundColor: [
                    '#18bc9c', // Set the background color for each slice
                    '#f39c12',
                    '#e74c3c'
                ],
                borderColor: [
                    '#18bc9c', // Set the border color for each slice
                    '#f39c12',
                    '#e74c3c'
                ],
                borderWidth: 1 // Set the border width for each slice
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false
        }
    });
</script>
